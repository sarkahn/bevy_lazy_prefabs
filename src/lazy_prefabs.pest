int = @{ "0" | "-"?
    ~ (ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    }
float = @{
    "-"?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ (!".." ~ "." ~ ASCII_DIGIT*)
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
char = { "'" ~ 
(LETTER | PUNCTUATION | SYMBOL | ASCII_DIGIT)
~ "'" }

vec2 = { "Vec2" ~ "{" ~ fields ~ "}" }
vec3 = { "Vec3" ~ "{" ~ fields ~ "}" }  

string_inner = _{ (!"\"" ~ (LETTER | NUMBER | SYMBOL | PUNCTUATION))* }
inner_silent = @{ string_inner }
string = ${ "\"" ~ string_inner ~ "\"" }
array = {
    "[" ~ "]" |
    "[" ~ value ~ ("," ~ value)* ~ ","? ~ "]"
}
range = { "(" ~ int ~ ".." ~ int ~ ")" }

id_letter = { LETTER | "_" } 
type_name = @{ id_letter ~ (id_letter | NUMBER )* }
field_name = @{ id_letter ~ (id_letter | NUMBER )* }
prefab_name = @{ id_letter ~ (id_letter | NUMBER )* }
material_type_name = @{ id_letter ~ (id_letter | NUMBER )* }

color = ${ color_id ~ color_value }
color_id = _{ "Color::" }
color_value = { "BLUE" | "RED" | "GREEN" | "YELLOW" | "PINK" } 

value = _{ vec2 | vec3 | float | int | color | char | string | range | array | material | component }

field = { field_name ~ ":" ~ value }
fields = _{ field ~ ("," ~ field)* ~ ","? }

material = { "Handle<" ~ material_type_name ~ ">" ~ material_fields? }
material_field = _{ (material_texture_path | material_loader_key | field ) }
material_fields = { "{" ~ 
	material_field ~ ("," ~ material_field)* ~ ","? ~ 
    "}" 
}
material_texture_path = { "texture_path" ~ ":" ~ string }
material_loader_key = { "loader_key" ~ ":" ~ string }

component = { (type_name ~ component_fields*) }
component_field = _{ (field | component) }
component_fields = _{ "{" ~ 
	component_field ~ ("," ~ component_field)* ~ ","? ~ 
    "}" 
    } 
components = _{ component ~ ("," ~ component)* ~ ","? }


bundle = { "bundle!(" ~ type_name ~ bundle_fields? ~ ")" }
bundle_field = _{ (material | component) }
bundle_fields = { 
    "{" ~ 
	bundle_field ~ ("," ~ bundle_field)* ~ ","? ~ 
    "}"
}
bundles = _{  bundle ~ ("," ~ bundle)* ~ ","? }

prefab = _{ prefab_name? ~ "(" ~ prefab_fields ~ ")" }
prefab_field = _{ (processor | component ) }
prefab_fields = _{ prefab_field ~ ("," ~ prefab_field)* ~ ","? }

processor = { "processor!(" ~ type_name  ~ properties* ~ ")" }
properties = _{ "{" ~ fields ~ "}" }
 
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
